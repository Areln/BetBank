
@{
    ViewData["Title"] = "NBAIndex";
}

@model BetBank.Models.ViewModels.LeagueEventsModel

<h1 style="text-align: center;">NBA Games</h1>

<div class="tcontainer">
    <div class="ticker-wrap">
        <div class="ticker-move">
            @foreach (EventsTable item in Model.LeaguesEvents)
            {

                <div class="ticker-item">
                    @item.EventDate<br />
                    <a href="../Bet/CreateBet?_eventId=@item.EventId&_BetType=MoneyLine&_eventTime=@item.EventDate">@item.HomeTeam @item.SpreadHome</a><br />
                    <div style="text-align:center">at</div>
                    <a href="../Bet/CreateBet?_eventId=@item.EventId&_BetType=MoneyLine&_eventTime=@item.EventDate">@item.AwayTeam @item.SpreadAway</a><br />

                </div>

            }
        </div>
    </div>
</div>

<div class="topnav" id="myTopnav">
    <a href="../Home/Index">Home</a>
    <a href="../Event/NFLIndex">NFL</a>
    <a href="../Event/NBAIndex">NBA</a>
    <a href="../Event/ESportsIndex">E-Sports</a>
</div>


<table class="table">
    <tr>
        <th>Game</th>
        <th>Spread</th>
        <th>Money Line</th>
        <th>Over/Under</th>

    </tr>
    @foreach (EventsTable item in Model.LeaguesEvents)
    {
        <tr>
            <td>
                @item.EventDate<br />
                <strong>@item.AwayTeam</strong><br />
                <strong>at</strong><br />
                <strong>@item.HomeTeam</strong>
            </td>
            <td>
                @item.AwayTeam.ToUpper().Substring(0, 3) (@item.SpreadAway)<br />
                @item.HomeTeam.ToUpper().Substring(0, 3) (@item.SpreadHome)<br />
                @if (item.SpreadHome > item.SpreadAway)
                {

                    <label>Favorites: @(item.PointSpreadHomeMoney * -1 / (item.PointSpreadHomeMoney * -1 + 100) * 100)</label>
                    <br />
                    <label>Underdog: @(100 / ((item.PointSpreadAwayMoney * -1) + 100) * 100)</label>
                }
                else
                {

                    <label>Favorite: @(item.PointSpreadAwayMoney * -1 / (item.PointSpreadAwayMoney * -1 + 100) * 100)</label>
                    <br />
                    <label>Underdog: @(100 / ((item.PointSpreadHomeMoney * -1) + 100) * 100)</label>
                }

            </td>


            <td>
                @item.AwayTeam.ToUpper().Substring(0, 3) <strong>ML</strong> (@item.MoneyLineAway)<br />
                @item.HomeTeam.ToUpper().Substring(0, 3) <strong>ML</strong> (@item.MoneyLineHome)<br />

        }
                @if (item.MoneyLineHome > item.MoneyLineAway)
                {
                    <label>@((item.MoneyLineAway * -1) / (item.MoneyLineAway * -1 + 100) * 100)</label>
                    <br />
                    <label>@((100 / (item.MoneyLineHome + 100)) * 100)</label>
                }
                else
                {
                    <label>@((100 / (item.MoneyLineAway + 100)) * 100)</label>
                    <br />
                    <label>@((item.MoneyLineHome * -1) / (item.MoneyLineHome * -1 + 100) * 100)</label>
                }


            </td>
            <td>
                <strong>O/U</strong> (@item.TotalAway/@item.TotalHome)
            </td>

        </tr>
    }
</table>

